[alias]
l = log \
    --all \
    --graph \
    --decorate \
    --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' \
    --abbrev-commit

s = status -s

p = !"git pull; git submodule foreach git pull origin master"

c = clone --recursive

f = fetch

c = commit -m

ca = !git add -A && git commit -av

cp = commit -p

go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

tags = tag -l
branches = branch -a
remotes = remote -v

amend = commit --amend --reuse-message=HEAD

credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"

reb = "!r() { git rebase -i HEAD~$1; }; r"

fb = "!f() { git branch -a --contains $1; }; f"

ft = "!f() { git describe --always --contains $1; }; f"

fc = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

fm = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"

dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

contributors = shortlog --summary --numbered

cf = checkout -f
